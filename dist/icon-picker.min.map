{"version":3,"file":"icon-picker.min.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///./src/js/utlis/utils.js","webpack:///./src/js/utlis/virtualIconGrid.js","webpack:///./src/js/template.js","webpack:///./src/js/utlis/collections.js","webpack:///./src/js/IconPicker.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IconPicker\"] = factory();\n\telse\n\t\troot[\"IconPicker\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","function eventListener(method, elements, events, fn) {\r\n    if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) {\r\n        events = [events];\r\n    }\r\n\r\n    for (const el of elements) {\r\n        for (const ev of events) {\r\n            el[method](ev, fn);\r\n        }\r\n    }\r\n\r\n    return [].slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event to element.\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const addEvent = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event from element.\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const removeEvent = eventListener.bind(null, 'removeEventListener');\r\n\r\n/**\r\n * Resolves a HTMLElement by query.\r\n * @param val\r\n * @returns {null|Document|Element}\r\n */\r\nexport function resolveElement(val) {\r\n    if (val instanceof HTMLElement) {\r\n        return val;\r\n    } else if (typeof val === 'string') {\r\n        return document.querySelector(val)\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Convert a template string into HTML DOM nodes\r\n * @param  {String} str The template string\r\n * @return {Node}       The template HTML\r\n */\r\nexport function stringToHTML(str) {\r\n    if (window.DOMParser) {\r\n        const parser = new DOMParser();\r\n        const doc = parser.parseFromString(str, 'text/html');\r\n        return doc.body.firstElementChild;\r\n    }\r\n\r\n    const dom = document.createElement('div');\r\n    dom.innerHTML = str;\r\n    return dom.firstElementChild;\r\n}\r\n\r\n/**\r\n * Check if item is an object\r\n * @param {Object} item\r\n * @returns {boolean}\r\n */\r\nexport function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item));\r\n}\r\n\r\n/**\r\n *\r\n * @param target\r\n * @param source\r\n * @returns {Object}\r\n */\r\nexport function mergeDeep(target, source) {\r\n    let output = Object.assign({}, target);\r\n\r\n    if (isObject(target) && isObject(source)) {\r\n        Object.keys(source).forEach(key => {\r\n            if (isObject(source[key])) {\r\n                if (!(key in target))\r\n                    Object.assign(output, {[key]: source[key]});\r\n                else\r\n                    output[key] = mergeDeep(target[key], source[key]);\r\n            } else {\r\n                Object.assign(output, {[key]: source[key]});\r\n            }\r\n        });\r\n    }\r\n    return output;\r\n}\r\n\r\n/**\r\n *\r\n * @param callback\r\n * @param delay\r\n * @returns {(function(): void)|*}\r\n */\r\nexport function debounce(callback, delay){\r\n    var timer;\r\n    return function(){\r\n        var args = arguments;\r\n        var context = this;\r\n        clearTimeout(timer);\r\n        timer = setTimeout(function(){\r\n            callback.apply(context, args);\r\n        }, delay)\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param object\r\n * @param value\r\n * @returns {string}\r\n */\r\nexport function getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n}\r\n","/*\r\n  Virtualized Icon Grid (vanilla JS)\r\n  ----------------------------------\r\n  Renders only the visible icons (plus a buffer) inside a scrollable container.\r\n  - No frameworks, no dependencies\r\n  - Works with your availableIcons: [{ value: string, categories?: string[] }]\r\n  - Integrates with an <input> for searching\r\n  - Keeps DOM size tiny and fast even with thousands of icons\r\n\r\n  Basic usage (inside your component/class):\r\n\r\n    this.virtualIconGrid = new VirtualIconGrid({\r\n      container: root.content,                    // scrollable container element\r\n      items: this.availableIcons,                 // data source\r\n      renderItem: (icon) => {\r\n        // Customize how each icon renders\r\n        const btn = document.createElement('button');\r\n        btn.type = 'button';\r\n        btn.className = `icon-element ${icon.value}`; // keep your class for styles\r\n        btn.title = icon.value;\r\n        btn.setAttribute('aria-label', icon.value);\r\n        // Example inner content; adjust to your icon system\r\n        btn.innerHTML = `<i class=\"${icon.value}\"></i>`;\r\n        // Optional: selection behavior\r\n        btn.addEventListener('click', () => this._onSelect && this._onSelect(icon));\r\n        return btn;\r\n      },\r\n      i18nEmpty: options.i18n['text:empty'],\r\n      estimateItemSize: { width: 72, height: 72 }, // tune to your icon tile size\r\n      bufferRows: 4                                // extra rows rendered above/below viewport\r\n    });\r\n\r\n    this.virtualIconGrid.mount();\r\n\r\n    // Hook up search input\r\n    const onSearch = debounce((evt) => {\r\n      const q = (evt.target.value || '').trim().toLowerCase();\r\n      this.virtualIconGrid.setQuery(q);\r\n    }, 120);\r\n    this._eventBindings.push(addEvent(root.search, 'input', onSearch));\r\n\r\n  Minimal CSS you should have:\r\n    .virtual-scroll { overflow: auto; position: relative; }\r\n    .vs-inner { position: relative; width: 100%; }\r\n    .vs-item { position: absolute; }\r\n    .is-empty { padding: 1rem; color: #666; }\r\n\r\n*/\r\n\r\nexport default class VirtualIconGrid {\r\n  constructor({\r\n    container,\r\n    items,\r\n    renderItem,\r\n    i18nEmpty = 'No results',\r\n    estimateItemSize = { width: 24, height: 24 },\r\n    bufferRows = 3\r\n  }) {\r\n    if (!container) throw new Error('VirtualIconGrid: container is required');\r\n    if (!renderItem) throw new Error('VirtualIconGrid: renderItem is required');\r\n\r\n    this.container = container; // scrollable element\r\n    this.items = Array.isArray(items) ? items.slice() : [];\r\n    this.renderItem = renderItem;\r\n    this.i18nEmpty = i18nEmpty;\r\n    this.estimate = estimateItemSize;\r\n    this.bufferRows = Math.max(0, bufferRows | 0);\r\n\r\n    // Internal state\r\n    this._query = '';\r\n    this._indexed = [];   // [{value, text}]\r\n    this._filtered = [];  // filtered items\r\n    this._cols = 1;\r\n    this._itemW = this.estimate.width;\r\n    this._itemH = this.estimate.height;\r\n    this._gapX = 8; // horizontal gap guess; refined via measurement\r\n    this._gapY = 8; // vertical gap guess\r\n    this._mounted = false;\r\n    this._onScroll = this._onScroll.bind(this);\r\n    this._onResize = this._onResize.bind(this);\r\n\r\n    // DOM nodes\r\n    this._inner = document.createElement('div');\r\n    this._inner.className = 'vs-inner';\r\n    this._emptyEl = document.createElement('div');\r\n    this._emptyEl.className = 'is-empty';\r\n    this._emptyEl.textContent = this.i18nEmpty;\r\n\r\n    // For cheap diff to avoid rerendering same window\r\n    this._lastRange = { start: -1, end: -1 };\r\n\r\n    // Observer\r\n    this._resizeObs = null;\r\n\r\n    // Prepare index and initial filter\r\n    this._buildIndex();\r\n    this._filtered = this.items;\r\n  }\r\n\r\n  mount() {\r\n    if (this._mounted) return;\r\n    this._mounted = true;\r\n\r\n    // Clear container (you may want to preserve other siblings if needed)\r\n    while (this.container.firstChild) this.container.removeChild(this.container.firstChild);\r\n\r\n    // Ensure container has the right class for scroll behavior\r\n    this.container.classList.add('virtual-scroll');\r\n\r\n    // Attach inner scroll space\r\n    this.container.appendChild(this._inner);\r\n\r\n    // Measure actual item size + gaps using a sample\r\n    this._measureItem();\r\n\r\n    // Compute columns and paint initial frame\r\n    this._computeLayout();\r\n    this._updateInnerHeight();\r\n    this._renderWindow();\r\n    this._toggleEmptyMessage();\r\n\r\n    // Listeners\r\n    this.container.addEventListener('scroll', this._onScroll, { passive: true });\r\n\r\n    // ResizeObserver for container size changes\r\n    if ('ResizeObserver' in window) {\r\n      this._resizeObs = new ResizeObserver(this._onResize);\r\n      this._resizeObs.observe(this.container);\r\n    } else {\r\n      // Fallback: recompute on window resize\r\n      window.addEventListener('resize', this._onResize);\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    if (!this._mounted) return;\r\n    this._mounted = false;\r\n\r\n    this.container.removeEventListener('scroll', this._onScroll);\r\n    if (this._resizeObs) {\r\n      this._resizeObs.disconnect();\r\n      this._resizeObs = null;\r\n    } else {\r\n      window.removeEventListener('resize', this._onResize);\r\n    }\r\n\r\n    // Clean DOM\r\n    this._inner.replaceChildren();\r\n    if (this._emptyEl && this._emptyEl.parentNode) this._emptyEl.remove();\r\n  }\r\n\r\n  setItems(nextItems) {\r\n    this.items = Array.isArray(nextItems) ? nextItems.slice() : [];\r\n    this._buildIndex();\r\n    this._applyFilter();\r\n  }\r\n\r\n  setQuery(q) {\r\n    const next = (q || '').toLowerCase();\r\n    if (next === this._query) return;\r\n    this._query = next;\r\n    this._applyFilter();\r\n  }\r\n\r\n  // ---------- internals ----------\r\n  _buildIndex() {\r\n    this._indexed = this.items.map(it => ({\r\n      value: it.value,\r\n      text: [it.value, ...(it.categories || [])].join(' ').toLowerCase(),\r\n      ref: it\r\n    }));\r\n  }\r\n\r\n  _applyFilter() {\r\n    if (!this._query) {\r\n      this._filtered = this.items;\r\n    } else {\r\n      const q = this._query;\r\n      this._filtered = this._indexed\r\n        .filter(row => row.text.includes(q))\r\n        .map(row => row.ref);\r\n    }\r\n\r\n    this._toggleEmptyMessage();\r\n    this._updateInnerHeight();\r\n    this._lastRange.start = -1; // force repaint\r\n    this._renderWindow();\r\n  }\r\n\r\n  _toggleEmptyMessage() {\r\n    const hasResults = this._filtered.length > 0;\r\n    if (!hasResults) {\r\n      if (!this._emptyEl.parentNode) this.container.appendChild(this._emptyEl);\r\n    } else if (this._emptyEl.parentNode) {\r\n      this._emptyEl.remove();\r\n    }\r\n  }\r\n\r\n  _measureItem() {\r\n    // Create a sample tile using renderItem to get actual size and margins/gaps\r\n    const sampleData = this.items[0] || { value: 'sample' };\r\n    const sample = this.renderItem(sampleData);\r\n    sample.style.position = 'absolute';\r\n    sample.style.visibility = 'hidden';\r\n    sample.classList.add('vs-item');\r\n\r\n    // Place within inner to measure CSS-driven size\r\n    this._inner.appendChild(sample);\r\n    // Allow layout\r\n    const rect = sample.getBoundingClientRect();\r\n    const style = window.getComputedStyle(sample);\r\n\r\n    // Fallbacks if 0\r\n    const w = Math.max(rect.width, this.estimate.width);\r\n    const h = Math.max(rect.height, this.estimate.height);\r\n\r\n    // Try to infer gaps from margin\r\n    const mx = parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n    const my = parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n\r\n    this._itemW = Math.round(w);\r\n    this._itemH = Math.round(h);\r\n    this._gapX = isFinite(mx) ? Math.max(0, Math.round(mx)) : this._gapX;\r\n    this._gapY = isFinite(my) ? Math.max(0, Math.round(my)) : this._gapY;\r\n\r\n    sample.remove();\r\n  }\r\n\r\n  _computeLayout() {\r\n    const width = this.container.clientWidth || 1;\r\n    const fullW = this._itemW + this._gapX;\r\n    const cols = Math.max(1, Math.floor((width + this._gapX) / fullW));\r\n\r\n    this._cols = cols;\r\n  }\r\n\r\n  _totalRows() {\r\n    return Math.ceil(this._filtered.length / this._cols);\r\n  }\r\n\r\n  _updateInnerHeight() {\r\n    const rows = this._totalRows();\r\n    const totalH = rows * (this._itemH + this._gapY) - this._gapY; // last row no gap\r\n    this._inner.style.height = Math.max(0, totalH).toString() + 'px';\r\n  }\r\n\r\n  _onResize() {\r\n    const prevCols = this._cols;\r\n    this._computeLayout();\r\n    if (this._cols !== prevCols) {\r\n      this._updateInnerHeight();\r\n      this._lastRange.start = -1; // force repaint on layout change\r\n      this._renderWindow();\r\n    } else {\r\n      // Height may still change if container height changed\r\n      this._renderWindow();\r\n    }\r\n  }\r\n\r\n  _onScroll() {\r\n    this._renderWindow();\r\n  }\r\n\r\n  _renderWindow() {\r\n    if (!this._filtered.length) {\r\n      this._inner.replaceChildren();\r\n      this._lastRange = { start: -1, end: -1 };\r\n      return;\r\n    }\r\n\r\n    const viewTop = this.container.scrollTop;\r\n    const viewH = this.container.clientHeight;\r\n    const rowH = this._itemH + this._gapY;\r\n\r\n    const firstRow = Math.max(0, Math.floor(viewTop / rowH) - this.bufferRows);\r\n    const lastRow = Math.floor((viewTop + viewH) / rowH) + this.bufferRows;\r\n\r\n    const start = firstRow * this._cols;\r\n    const endExclusive = Math.min(this._filtered.length, (lastRow + 1) * this._cols);\r\n\r\n    if (start === this._lastRange.start && endExclusive === this._lastRange.end) return;\r\n    this._lastRange = { start, end: endExclusive };\r\n\r\n    const frag = document.createDocumentFragment();\r\n\r\n    for (let i = start; i < endExclusive; i++) {\r\n      const data = this._filtered[i];\r\n      if (!data) continue;\r\n      const row = Math.floor(i / this._cols);\r\n      const col = i % this._cols;\r\n      const x = col * (this._itemW + this._gapX);\r\n      const y = row * (this._itemH + this._gapY);\r\n\r\n      const el = this.renderItem(data);\r\n      el.classList.add('vs-item');\r\n      // Absolutely position into the inner surface\r\n      el.style.transform = `translate(${x}px, ${y}px)`;\r\n      el.style.width = this._itemW + 'px';\r\n      el.style.height = this._itemH + 'px';\r\n\r\n      frag.appendChild(el);\r\n    }\r\n\r\n    this._inner.replaceChildren(frag);\r\n  }\r\n}\r\n","import {stringToHTML} from \"./utlis/utils\";\r\n\r\nexport default options => {\r\n    const {theme, i18n, closeOnSelect} = options;\r\n\r\n    const modalElement = getHTMLElements(`\r\n        <div class=\"icon-picker-modal\" tabindex=\"-1\" data-theme=\"${theme}\" data-element=\"modal\" aria-modal=\"true\" aria-labelledby=\"Icon picker modal\" role=\"dialog\">\r\n            <div class=\"icon-picker-modal__dialog\">\r\n                <div class=\"icon-picker-modal__header\" data-element=\"header\">\r\n                    ${typeof i18n['text:title'] === 'string' && i18n['text:title'] !== '' ? `<h2>${i18n['text:title']}</h2>` : ''}\r\n                    \r\n                    <button class=\"icon-picker-modal--close\" aria-label=\"Close\" data-interaction=\"close\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke-width=\"1.5\">\r\n                          <path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6.758 17.243 12.001 12m5.243-5.243L12 12m0 0L6.758 6.757M12.001 12l5.243 5.243\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n                \r\n                <input placeholder=\"${i18n['input:placeholder']}\" class=\"icon-picker-modal__search\" aria-label=\"${i18n['input:placeholder']}\" data-interaction=\"search\">\r\n                \r\n                <div class=\"icon-picker-modal__content\" data-element=\"content\"></div>\r\n            \r\n                ${!closeOnSelect ? `\r\n                    <div class=\"icon-picker-modal__footer\" data-element=\"footer\">\r\n                        <button type=\"button\" class=\"picker-save\" data-interaction=\"save\">${i18n['btn:save']}</button>\r\n                    </div>` : ''\r\n    }\r\n            </div>\r\n        </div>\r\n    `);\r\n\r\n    if (theme.includes('bootstrap')) {\r\n        modalElement.save?.classList.add('btn', 'btn-primary');\r\n        modalElement.search.classList.add('form-control');\r\n    }\r\n\r\n    return modalElement;\r\n}\r\n\r\n\r\nfunction getHTMLElements(str) {\r\n    const removeAttribute = (el, name) => {\r\n        const value = el.getAttribute(name);\r\n        el.removeAttribute(name);\r\n        return value;\r\n    };\r\n\r\n    const resolve = (element, base = {}) => {\r\n        const elementKey = removeAttribute(element, 'data-element');\r\n        elementKey && (base[elementKey] = element);\r\n\r\n        for (const child of Array.from(element.children)) {\r\n            const childInteractionKey = removeAttribute(child, 'data-interaction');\r\n\r\n            if (childInteractionKey) {\r\n                childInteractionKey && (base[childInteractionKey] = child);\r\n            }\r\n\r\n            resolve(child, base);\r\n        }\r\n\r\n        return base;\r\n    };\r\n\r\n    return resolve(stringToHTML(str));\r\n}\r\n","const iconifyPath = 'https://raw.githubusercontent.com/iconify/icon-sets/master/json';\r\n\r\nexport const collections = {\r\n    'Material Design Icons': {\r\n        key: 'mdi',\r\n        prefix: 'mdi mdi-',\r\n        url: `${iconifyPath}/mdi.json`\r\n    },\r\n    'FontAwesome Brands 6': {\r\n        key: 'fa6-brands',\r\n        prefix: 'fab fa-',\r\n        url: `${iconifyPath}/fa6-brands.json`\r\n    },\r\n    'FontAwesome Solid 6': {\r\n        key: 'fa6-solid',\r\n        prefix: 'fas fa-',\r\n        url: `${iconifyPath}/fa6-solid.json`\r\n\r\n    },\r\n    'FontAwesome Regular 6': {\r\n        key: 'fa6-regular',\r\n        prefix: 'far fa-',\r\n        url: `${iconifyPath}/fa6-regular.json`\r\n    },\r\n    'Iconoir': {\r\n        key: 'iconoir',\r\n        prefix: 'iconoir-',\r\n        url: `${iconifyPath}/iconoir.json`\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n * @param {array} collectionsOptions\r\n */\r\nexport function resolveCollection(collectionsOptions) {\r\n    let collectionResolved = Object.create({});\r\n\r\n    if (Array.isArray(collectionsOptions)) {\r\n        collectionsOptions.forEach((collection) => {\r\n            if (hasCollection(collection)) {\r\n                collectionResolved[collections[collection].key] = collections[collection]\r\n            } else if (collection.key) {\r\n                collectionResolved[collection.key] = collection\r\n            }\r\n        })\r\n    }\r\n\r\n    return collectionResolved;\r\n}\r\n\r\n/**\r\n *\r\n * @param {string} collection\r\n * @returns {boolean}\r\n */\r\nfunction hasCollection(collection) {\r\n    return collections.hasOwnProperty(collection)\r\n}\r\n","import * as _ from \"./utlis/utils\";\r\nimport VirtualIconGrid from \"./utlis/virtualIconGrid\";\r\nimport template from \"./template\";\r\nimport { resolveCollection } from \"./utlis/collections\";\r\n\r\nexport default class IconPicker {\r\n    virtualIconGrid = null;\r\n    availableIcons = [];\r\n    static DEFAULT_OPTIONS = {\r\n        theme: 'default',\r\n        closeOnSelect: true,\r\n        defaultValue: null,\r\n        iconSource: [],\r\n        i18n: {\r\n            'input:placeholder': 'Search icon…',\r\n\r\n            'text:title': 'Select icon',\r\n            'text:empty': 'No results found…',\r\n            'text:loading' : 'Loading…',\r\n\r\n            'btn:save': 'Save'\r\n        }\r\n    }\r\n\r\n    _eventListener = {\r\n        select: [],\r\n        save: [],\r\n        show: [],\r\n        clear: [],\r\n        hide: [],\r\n        loaded: []\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param {string | HTMLElement} el\r\n     * @param {Object} options\r\n     */\r\n    constructor(el, options = {}) {\r\n        this.options = _.mergeDeep(IconPicker.DEFAULT_OPTIONS, options);\r\n        this.element = el;\r\n        this.iconsLoading = true;\r\n\r\n        // Initialize icon picker\r\n        this._preBuild();\r\n\r\n        if (this.element && this.options.iconSource.length > 0) {\r\n            this._binEvents();\r\n            this._renderdIcons();\r\n            this._createModal();\r\n        } else {\r\n            this._catchError('iconSourceMissing');\r\n        }\r\n\r\n    }\r\n\r\n    _preBuild() {\r\n        this.element = _.resolveElement(this.element);\r\n        this.root = template(this.options);\r\n\r\n        if (!Array.isArray(this.options.iconSource) && this.options.iconSource.length > 0) {\r\n            this.options.iconSource = [this.options.iconSource];\r\n        }\r\n        // Prepare (lazy) virtual grid; mount after modal becomes visible to get correct widths\r\n        this.virtualIconGrid = this.virtualIconGrid || new VirtualIconGrid({\r\n            container: this.root.content,\r\n            items: this.availableIcons ?? [],\r\n            renderItem: (icon) => this.renderItem(icon),\r\n            i18nEmpty: this.options.i18n['text:empty'],\r\n            estimateItemSize: { width: 34, height: 34 }, // tweak to your tile size\r\n            bufferRows: 4\r\n        });\r\n    }\r\n\r\n    renderItem(icon) {\r\n        // Customize how each icon renders\r\n        const btn = document.createElement('button');\r\n        btn.type = 'button';\r\n        btn.className = `icon-element ${icon.value}`; // keep your class for styles\r\n        btn.title = icon.value;\r\n        btn.setAttribute('aria-label', icon.value);\r\n        // Example inner content; adjust to your icon system\r\n        btn.innerHTML = icon.body;\r\n        // Selection behavior\r\n        btn.addEventListener('click', (evt) => icon.onSelect && icon.onSelect(evt));\r\n        \r\n        return btn;\r\n    }\r\n\r\n\r\n    ensureVirtualMounted = () => {\r\n        // If modal just opened, wait a frame so it has layout/width\r\n        requestAnimationFrame(() => {\r\n        if (!this.virtualIconGrid._mounted) {\r\n            this.virtualIconGrid.mount();\r\n        } else {\r\n            // Recompute columns/height if container size changed while hidden\r\n            this.virtualIconGrid._onResize && this.virtualIconGrid._onResize();\r\n        }\r\n        // Apply whatever is currently in the search box\r\n        const q = (this.root.search?.value || '').trim().toLowerCase();\r\n        this.virtualIconGrid.setItems(this.availableIcons);\r\n        this.virtualIconGrid.setQuery(q);\r\n        });\r\n    };\r\n\r\n\r\n    _binEvents() {\r\n        const {options, root, element, virtualIconGrid} = this;\r\n\r\n        const onSearch = _.debounce((evt) => {\r\n            const q = (evt.target.value || '').trim().toLowerCase();\r\n            if (virtualIconGrid) virtualIconGrid.setQuery(q);\r\n        }, 120);\r\n\r\n        this._eventBindings = [\r\n            _.addEvent(element, 'click', () => { \r\n                this.show(); \r\n                this.ensureVirtualMounted(); \r\n            }),\r\n            _.addEvent(root.close, 'click', () => this.hide()),\r\n            _.addEvent(root.modal, 'click', (evt) => {\r\n                if (evt.target === root.modal) {\r\n                    this.hide();\r\n                }\r\n            }),\r\n            _.addEvent(root.search, 'keyup', _.debounce(onSearch, 250))\r\n        ];\r\n\r\n        if (!options.closeOnSelect) {\r\n            this._eventBindings.push(_.addEvent(root.save, 'click', () => this._onSave()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide icon picker modal\r\n     */\r\n    hide() {\r\n        if (this.isOpen()) {\r\n            this.root.modal.classList.remove('is-visible');\r\n            this._emit('hide');\r\n\r\n            return this;\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * Show icon picker modal\r\n     */\r\n    show() {\r\n        if (!this.isOpen()) {\r\n            this.root.modal.classList.add('is-visible');\r\n            this._emit('show');\r\n\r\n            return this;\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    clear() {\r\n        if (this.initialized && this.currentlySelectName) {\r\n            this.currentlySelectName = null;\r\n\r\n            this._emit('clear');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if modal is open\r\n     * @returns {boolean}\r\n     */\r\n    isOpen() {\r\n        return this.root.modal.classList.contains('is-visible');\r\n    }\r\n\r\n    /**\r\n     * Check if the icons are loaded\r\n     * @returns {boolean}\r\n     */\r\n    iconsLoaded(){\r\n        return !this.loadingState;\r\n    }\r\n\r\n    /**\r\n     * Destroy icon picker instance and detach all events listeners\r\n     * @param {boolean} deleteInstance\r\n     */\r\n    destroy(deleteInstance = true) {\r\n        this.initialized = false;\r\n\r\n        // Remove elements events\r\n        this._eventBindings.forEach(args => _.removeEvent(...args));\r\n\r\n        // Delete instance\r\n        if (deleteInstance) {\r\n            Object.keys(this).forEach((key) => delete this[key]);\r\n        }\r\n    }\r\n\r\n    _emit(event, ...args) {\r\n        this._eventListener[event].forEach(cb => cb(...args, this));\r\n    }\r\n\r\n    on(event, callback) {\r\n        if (this._eventListener[event] !== undefined) {\r\n            this._eventListener[event].push(callback);\r\n            return this;\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    off(event, callback) {\r\n        const callBacks = (this._eventListener[event] || []);\r\n        const index = callBacks.indexOf(callback);\r\n\r\n        if (~index) {\r\n            callBacks.splice(index, 1);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    _createModal() {\r\n        document.body.appendChild(this.root.modal);\r\n\r\n        this.initialized = true;\r\n    }\r\n\r\n    _onSave() {\r\n        this._setValueInput()\r\n\r\n        this.hide();\r\n        this._emit('save', this.emitValues);\r\n    }\r\n\r\n    /**\r\n     * Generate icons elements\r\n     * @private\r\n     */\r\n    async _renderdIcons() {\r\n        const {root, options} = this;\r\n        let previousSelectedIcon = null;\r\n        let currentlySelectElement = null;\r\n        let categories = null;\r\n        this.availableIcons = [];\r\n\r\n        root.content.innerHTML = `<div class=\"is-loading\">${options.i18n['text:loading']}</div>`;\r\n\r\n        let icons = await this._getIcons();\r\n\r\n        icons.forEach((library) => {\r\n            let iconFormat = library.iconFormat ? library.iconFormat : 'svg';\r\n\r\n            for (const [key, value] of Object.entries(library.icons)) {\r\n                const iconTarget = document.createElement('button');\r\n                iconTarget.title = key\r\n                iconTarget.className = `icon-element ${key}`;\r\n                iconTarget.dataset.value = library.prefix + key;\r\n\r\n                if (library.categories && Object.entries(library.categories).length > 0) {\r\n                    categories = [];\r\n\r\n                    for (const [categoryKey] of Object.entries(library.categories)) {\r\n                        if (library.categories[categoryKey].includes(key)) {\r\n                            if (categories.length > 0) {\r\n                                categories.push(categoryKey.toLowerCase())\r\n                            } else {\r\n                                categories = [categoryKey.toLowerCase()]\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (library.chars) {\r\n                    iconTarget.dataset.unicode = _.getKeyByValue(library.chars, key);\r\n                }\r\n\r\n                let iconElement;\r\n                if (iconFormat === 'i' || !value.body) {\r\n                    iconElement = document.createElement('i');\r\n                    iconElement.setAttribute('class', iconTarget.dataset.value);\r\n                } else if (iconFormat === 'markup') {\r\n                    let t = document.createElement('template');\r\n                    t.innerHTML = value.body;\r\n                    iconElement = t.content;\r\n                } else {\r\n                    iconElement = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n                    iconElement.setAttribute('height', '24');\r\n                    iconElement.setAttribute('width', '24');\r\n                    iconElement.setAttribute('viewBox', `0 0 ${value.width ? value.width : library.width} ${value.height ? value.height : library.height}`);\r\n                    iconElement.innerHTML = value.body;\r\n                }\r\n\r\n                let that = this;\r\n\r\n                this.availableIcons.push({value: key, body: iconElement.outerHTML, ...(categories?.length > 0 && {categories}), onSelect: (evt) => {\r\n                    if (that.currentlySelectName !== evt.currentTarget.firstChild.className) {\r\n                        evt.currentTarget.classList.add('is-selected');\r\n\r\n                        currentlySelectElement = evt.currentTarget;\r\n                        that.currentlySelectName = currentlySelectElement.dataset.value;\r\n                        that.SVGString = iconElement.outerHTML;\r\n\r\n                        that.emitValues = {\r\n                            name: key,\r\n                            value: that.currentlySelectName,\r\n                            svg: that.SVGString,\r\n                        }\r\n\r\n                        if (library.chars) {\r\n                            that.emitValues.unicode = iconElement.dataset.unicode\r\n                        }\r\n\r\n                        that._emit('select', that.emitValues);\r\n                    }\r\n\r\n                    if (previousSelectedIcon) {\r\n                        previousSelectedIcon.classList.remove('is-selected');\r\n                    }\r\n\r\n                    if (options.closeOnSelect) {\r\n                        that._onSave();\r\n                    }\r\n\r\n                    previousSelectedIcon = currentlySelectElement;\r\n                }});\r\n            }\r\n        });\r\n\r\n        if (options.defaultValue || this.element.value) {\r\n            // Check if icon name ou icon value is set\r\n            let defaultValueElement = document.querySelector(`[data-value=\"${options.defaultValue ? options.defaultValue : this.element.value}\"]`) ?\r\n                document.querySelector(`[data-value=\"${options.defaultValue ? options.defaultValue : this.element.value}\"]`) :\r\n                document.querySelector(`.${options.defaultValue ? options.defaultValue : this.element.value}`);\r\n\r\n            let iconValue = defaultValueElement?.dataset.value ?? '';\r\n            defaultValueElement?.classList.add('is-selected');\r\n\r\n            previousSelectedIcon = defaultValueElement;\r\n            this.currentlySelectName = iconValue;\r\n\r\n            if (!this.element.value) {\r\n                this._setValueInput();\r\n            }\r\n        }\r\n\r\n        this.ensureVirtualMounted();        \r\n        const loadingElement = root.content.querySelector('.is-loading');\r\n        if (loadingElement) {\r\n            loadingElement.remove();\r\n        }\r\n\r\n        this.iconsLoading = false;\r\n        this._emit('loaded');\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    async _getIcons() {\r\n        const {options} = this\r\n        const iconsURL = [];\r\n\r\n        let sourceInformation = resolveCollection(options.iconSource);\r\n\r\n        for (const source of Object.values(sourceInformation)) {\r\n            iconsURL.push(source.url)\r\n        }\r\n\r\n        return await Promise.all(iconsURL.map((iconURL) => fetch(iconURL).then((response) => response.json())))\r\n            .then((iconLibrary) => {\r\n                iconLibrary.forEach((library) => {\r\n                    if (sourceInformation.hasOwnProperty(library.prefix)) {\r\n                        library.prefix = sourceInformation[library.prefix].prefix\r\n                    }\r\n                });\r\n\r\n                return iconLibrary;\r\n            });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} exception\r\n     * @private\r\n     */\r\n    _catchError(exception) {\r\n        switch (exception) {\r\n            case 'iconSourceMissing':\r\n                throw Error('No icon source was found.');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set value into input element\r\n     * @param value\r\n     * @private\r\n     */\r\n    _setValueInput(value = this.currentlySelectName) {\r\n        const {element} = this;\r\n\r\n        if (element instanceof HTMLInputElement && this.currentlySelectName) {\r\n            element.value = value;\r\n        }\r\n    }\r\n}\r\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","eventListener","method","elements","events","fn","Array","isArray","el","ev","slice","arguments","addEvent","bind","removeEvent","isObject","item","mergeDeep","target","source","output","assign","keys","forEach","debounce","callback","delay","timer","args","context","this","clearTimeout","setTimeout","apply","getKeyByValue","object","value","find","VirtualIconGrid","constructor","container","items","renderItem","i18nEmpty","estimateItemSize","width","height","bufferRows","Error","estimate","Math","max","_query","_indexed","_filtered","_cols","_itemW","_itemH","_gapX","_gapY","_mounted","_onScroll","_onResize","_inner","document","createElement","className","_emptyEl","textContent","_lastRange","start","end","_resizeObs","_buildIndex","mount","firstChild","removeChild","classList","add","appendChild","_measureItem","_computeLayout","_updateInnerHeight","_renderWindow","_toggleEmptyMessage","addEventListener","passive","window","ResizeObserver","observe","destroy","removeEventListener","disconnect","replaceChildren","parentNode","remove","setItems","nextItems","_applyFilter","setQuery","q","next","toLowerCase","map","it","text","categories","join","ref","filter","row","includes","length","sampleData","sample","style","position","visibility","rect","getBoundingClientRect","getComputedStyle","w","h","mx","parseFloat","marginLeft","marginRight","my","marginTop","marginBottom","round","isFinite","clientWidth","fullW","cols","floor","_totalRows","ceil","totalH","toString","prevCols","viewTop","scrollTop","viewH","clientHeight","rowH","firstRow","lastRow","endExclusive","min","frag","createDocumentFragment","i","data","x","y","transform","options","theme","i18n","closeOnSelect","modalElement","str","removeAttribute","name","getAttribute","resolve","element","base","elementKey","child","from","children","childInteractionKey","DOMParser","parseFromString","body","firstElementChild","dom","innerHTML","stringToHTML","getHTMLElements","save","search","iconifyPath","collections","prefix","url","resolveCollection","collectionsOptions","collectionResolved","create","collection","hasCollection","IconPicker","virtualIconGrid","availableIcons","static","defaultValue","iconSource","_eventListener","select","show","clear","hide","loaded","DEFAULT_OPTIONS","iconsLoading","_preBuild","_binEvents","_renderdIcons","_createModal","_catchError","val","HTMLElement","querySelector","template","content","icon","btn","type","title","setAttribute","evt","onSelect","ensureVirtualMounted","requestAnimationFrame","trim","onSearch","_eventBindings","close","modal","push","_onSave","isOpen","_emit","initialized","currentlySelectName","contains","iconsLoaded","loadingState","deleteInstance","event","cb","on","undefined","off","callBacks","index","indexOf","splice","_setValueInput","emitValues","previousSelectedIcon","currentlySelectElement","_getIcons","library","iconFormat","entries","icons","iconTarget","dataset","categoryKey","iconElement","chars","unicode","t","createElementNS","that","outerHTML","currentTarget","SVGString","svg","defaultValueElement","iconValue","loadingElement","iconsURL","sourceInformation","values","Promise","all","iconURL","fetch","then","response","json","iconLibrary","exception","HTMLInputElement"],"sourceRoot":""}